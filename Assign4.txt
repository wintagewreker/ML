1. import pandas as pd
2. import matplotlib.pyplot as plt
3. df = pd.read_csv('mall.csv')
4. df.shape
5. df.info()
6. X=df.iloc[:,[3,4]].values
7. from sklearn.cluster import KMeans
8. wcss=[]
9. for i in range(1,11):
10. `    kmeans=KMeans(n_clusters=i, init='k-means++',max_iter=300,random_state=42)`
11. `    kmeans.fit(X)`
12. `    wcss.append(kmeans.inertia_)`
13. plt.plot(range(1,11),wcss)
14. plt.title("Elbow Method")
15. plt.xlabel('Number of Clusters')
16. plt.ylabel('WCSS')
17. kmeans=KMeans(n_clusters=5,init='k-means++',max_iter=300,random_state=42)
18. y_kmeans=kmeans.fit_predict(X)
19. y_kmeans
20. plt.scatter(X[y_kmeans==0,0],X[y_kmeans==0,1],s=200,c='red',label='cluster1')
21. plt.scatter(X[y_kmeans==1,0],X[y_kmeans==1,1],s=200,c='blue',label='cluster2')
22. plt.scatter(X[y_kmeans==2,0],X[y_kmeans==2,1],s=200,c='green',label='cluster3')
23. plt.scatter(X[y_kmeans==3,0],X[y_kmeans==3,1],s=200,c='magenta',label='cluster4')
24. plt.scatter(X[y_kmeans==4,0],X[y_kmeans==4,1],s=200,c='pink',label='cluster5')
25. plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
26. plt.title("Kmeans Clustering")
27. plt.xlabel('Annual Income')
28. plt.ylabel('Spending SCore')
29. plt.legend()
30. plt.show()
31. import matplotlib.cm as cm
32. from sklearn.metrics import silhouette_samples, silhouette_score
33. import numpy as np
34. range_n_clusters = [2, 3, 4, 5, 6]
35. for n_clusters in range_n_clusters:
36. `    clusterer = KMeans(n_clusters=n_clusters, random_state=10)`
37. `    cluster_labels = clusterer.fit_predict(X)`
38. `    silhouette_avg = silhouette_score(X, cluster_labels)`
39. `    print("For n_clusters =",n_clusters,"The average silhouette_score is :",silhouette_avg)`
40. import scipy.cluster.hierarchy as sch
41. plt.figure(figsize=(10,10))
42. dendrogram = sch.dendrogram(sch.linkage(X, method = 'single'))
43. plt.title('Dendrogram')
44. plt.xlabel('Customers')
45. plt.ylabel('Euclidean distances')
46. plt.show()
47. from sklearn.cluster import AgglomerativeClustering
48. hc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')
49. y_hc = hc.fit_predict(X)
50. plt.figure(figsize=(8,8))
51. plt.scatter(X[y_hc == 0, 0], X[y_hc == 0, 1], s = 100, c = 'red', label = 'Careful')
52. plt.scatter(X[y_hc == 1, 0], X[y_hc == 1, 1], s = 100, c = 'blue', label = 'Standard')
53. plt.scatter(X[y_hc == 2, 0], X[y_hc == 2, 1], s = 100, c = 'green', label = 'Target')
54. plt.scatter(X[y_hc == 3, 0], X[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Careless')
55. plt.scatter(X[y_hc == 4, 0], X[y_hc == 4, 1], s = 100, c = 'magenta', label = 'Sensible')
56. plt.title('Clusters of customers using Hierarchical Clustering')
57. plt.xlabel('Annual Income (K$)')
58. plt.ylabel('Spending Score (1-100)')
59. plt.legend()
60. plt.show()